#11.
import numpy as np
import scipy as sp
import matplotlib.pyplot as plt

# Defining the box function as two functions f1 and f2
def f1(x):
    if(x > 1):
        return 0
    elif(x < -1):
        return 0
    else:
        return 1
    
def f2(x):
    if(x > 1):
        return 0
    elif(x < -1):
        return 0
    else:
        return 1

n = 2048
data1 = np.zeros(n, dtype=np.complex_)
data2 = np.zeros(n, dtype=np.complex_)
x = np.zeros(n, dtype=np.complex_)
xmin = -5
xmax = 5
dx = (xmax - xmin) / (n - 1)
for i in range(n):
    x[i] = xmin + i * dx
    data1[i] = f1(x[i])
    data2[i] = f2(x[i])
  
dft1 = np.fft.fft(data1, norm='ortho')
dft2 = np.fft.fft(data2, norm='ortho')
dft = dft1 * dft2

conv = np.fft.ifftshift(np.fft.ifft(dft, norm='ortho'))
conv = conv * dx * np.sqrt(n)

plt.plot(x.real, conv.real, ".", label="Convolution")
plt.plot(x.real, data1, "-", color='red', label="Box function 1")
plt.plot(x.real, data2, "-", color='blue', label="Box function 2")
plt.ylabel("f(x)", fontsize=15)
plt.legend(fontsize=17)
plt.show()
