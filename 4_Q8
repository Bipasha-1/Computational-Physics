# 8.
import numpy as np

def monte_carlo_area_circle(num_points=1000000):
    # Generate random points in the square [-1, 1] x [-1, 1]
    points = np.random.uniform(-1, 1, size=(num_points, 2))
    # Check if points lie within the unit circle
    inside_circle = np.sum(points[:, 0]**2 + points[:, 1]**2 <= 1)
    # Estimate the area of the circle
    area = (inside_circle / num_points) * 4
    return area

def monte_carlo_volume_10d_sphere(num_points=1000000):
    # Generate random points in the hypercube [-1, 1]^10
    points = np.random.uniform(-1, 1, size=(num_points, 10))
    # Check if points lie within the 10D unit sphere
    inside_sphere = np.sum(np.sum(points**2, axis=1) <= 1)
    # Estimate the volume of the 10D sphere
    volume = (inside_sphere / num_points) * (2**10)
    return volume

# Calculate the area of the unit circle
area_circle = monte_carlo_area_circle()
print(f"Estimated area of the unit circle: {area_circle}")

# Calculate the volume of the 10-dimensional unit sphere
volume_10d_sphere = monte_carlo_volume_10d_sphere()
print(f"Estimated volume of the 10-dimensional unit sphere: {volume_10d_sphere}")
